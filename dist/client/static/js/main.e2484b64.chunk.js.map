{"version":3,"sources":["components/Navigation.tsx","hooks/useFetchData.tsx","config.ts","components/PageContainer.tsx","components/Table/index.tsx","components/LoadingIndicator.tsx","components/calendar/CalendarContent.tsx","components/calendar/CalendarContainer.tsx","components/standings/StandingsContent.tsx","components/standings/StandingsContainer.tsx","components/snw/SNWContent.tsx","components/snw/SNWContainer.tsx","App.tsx","index.tsx"],"names":["navLinks","title","url","Navigation","map","link","key","to","useFetchData","React","useState","data","setData","loading","setLoading","error","setError","useCallback","a","fetch","response","json","baseUrl","PageContainer","children","Table","headers","headerMap","header","row","i","col","LoadingIndicator","date","trackName","qLaps","raceLaps","CalendarContent","events","raceCalendarUrl","CalendarContainer","calendar","invoke","useEffect","loadRaceCalendar","driverName","racesDriven","points","powerLimit","StandingsContent","standings","standingsUrl","loadStandings","SNWContent","SNWContainer","App","exact","path","StandingsContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2484b64.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { INavItem } from \"../types\";\n\nconst navLinks: INavItem[] = [\n  {\n    title: \"Kalenteri\",\n    url: \"/\",\n  },\n  {\n    title: \"Sarjataulukko\",\n    url: \"/standings\",\n  },\n  {\n    title: \"SNW\",\n    url: \"/snw\",\n  },\n];\n\nconst Navigation = () => {\n  return (\n    <div>\n      <ul>\n        {navLinks.map(link => (\n          <li key={link.title}>\n            <NavLink to={link.url}>{link.title}</NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\n\ninterface IFetchDataResponse {\n  data: any;\n  loading: boolean;\n  error: boolean;\n}\n\ntype LoadFunction = () => Promise<void>;\ntype FetchDataReturn = [IFetchDataResponse, LoadFunction];\n\nconst useFetchData = (url: string): FetchDataReturn => {\n  const [data, setData] = React.useState<any>(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(false);\n\n  const init = () => {\n    setData(null);\n    setLoading(true);\n    setError(false);\n  };\n\n  const invoke = React.useCallback(async () => {\n    init();\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n      setData(json);\n    } catch (err) {\n      setError(true);\n    }\n    setLoading(false);\n  }, [url]);\n\n  return [{ data, loading, error }, invoke];\n};\n\nexport default useFetchData;\n","const port = 3001;\nconst baseUrl = `http://localhost:${port}/api`;\n\nexport default {\n  port,\n  baseUrl,\n};\n","import React from \"react\";\n\ninterface Props {\n  title: string;\n  children: React.ReactNode | React.ReactNode[];\n}\n\nconst PageContainer: React.FC<Props> = ({ title, children }: Props) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default PageContainer;\n","import React from \"react\";\n\ninterface Props {\n  data: Array<any>;\n  headers: string[];\n  headerMap: {\n    [field: string]: string;\n  };\n}\n\nconst Table = ({ data, headers, headerMap }: Props) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          {headers.map(header => (\n            <th key={header}>{headerMap[header]}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, i) => (\n          <tr key={i}>\n            {headers.map(col => (\n              <td key={col}>{row[col]}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nconst LoadingIndicator = () => {\n  return <div>Loading...</div>;\n};\n\nexport default LoadingIndicator;\n","import React from \"react\";\nimport { IRaceCalendarEvent } from \"../../types\";\nimport Table from \"../Table\";\nimport LoadingIndicator from \"../LoadingIndicator\";\n\ninterface Props {\n  events: IRaceCalendarEvent[];\n  loading: boolean;\n}\n\nconst headerMap = {\n  date: \"Date\",\n  trackName: \"Track\",\n  qLaps: \"Q Laps\",\n  raceLaps: \"Race Laps\",\n};\n\nconst headers = [\"date\", \"trackName\", \"qLaps\", \"raceLaps\"];\n\nconst CalendarContent = ({ events, loading }: Props) => {\n  if (loading || !events) {\n    return <LoadingIndicator />;\n  }\n\n  return <Table data={events} headers={headers} headerMap={headerMap} />;\n};\n\nexport default CalendarContent;\n","import React from \"react\";\nimport { useFetchData } from \"../../hooks\";\nimport config from \"../../config\";\nimport { IRaceCalendarEvent } from \"../../types\";\nimport PageContainer from \"../PageContainer\";\nimport CalendarContent from \"./CalendarContent\";\n\nconst raceCalendarUrl = config.baseUrl + \"/races\";\n\nconst CalendarContainer = () => {\n  const [calendar, invoke] = useFetchData(raceCalendarUrl);\n  const { data, loading } = calendar;\n\n  React.useEffect(() => {\n    const loadRaceCalendar = async () => {\n      await invoke();\n    };\n    loadRaceCalendar();\n  }, [invoke]);\n\n  return (\n    <PageContainer title=\"Kisakalenteri\">\n      <CalendarContent\n        events={data as IRaceCalendarEvent[]}\n        loading={loading}\n      />\n    </PageContainer>\n  );\n};\n\nexport default CalendarContainer;\n","import React from \"react\";\nimport { IStandingRow } from \"../../types\";\nimport LoadingIndicator from \"../LoadingIndicator\";\nimport Table from \"../Table\";\n\ninterface Props {\n  standings: IStandingRow[];\n  loading: boolean;\n}\n\nconst headers = [\"driverName\", \"racesDriven\", \"points\", \"powerLimit\"];\n\nconst headerMap = {\n  driverName: \"Driver\",\n  racesDriven: \"Races\",\n  points: \"Points\",\n  powerLimit: \"Power Limit\",\n};\nconst StandingsContent = ({ standings, loading }: Props) => {\n  if (loading || !standings) {\n    return <LoadingIndicator />;\n  }\n  return <Table data={standings} headers={headers} headerMap={headerMap} />;\n};\n\nexport default StandingsContent;\n","import React from \"react\";\nimport { useFetchData } from \"../../hooks\";\nimport config from \"../../config\";\n\nimport PageContainer from \"../PageContainer\";\nimport StandingsContent from \"./StandingsContent\";\nimport { IStandingRow } from \"../../types\";\n\nconst standingsUrl = config.baseUrl + \"/standings\";\n\nconst CalendarContainer = () => {\n  const [standings, invoke] = useFetchData(standingsUrl);\n  const { data, loading } = standings;\n\n  React.useEffect(() => {\n    const loadStandings = async () => {\n      await invoke();\n    };\n    loadStandings();\n  }, [invoke]);\n\n  return (\n    <PageContainer title=\"Sarjataulukko\">\n      <StandingsContent standings={data as IStandingRow[]} loading={loading} />\n    </PageContainer>\n  );\n};\n\nexport default CalendarContainer;\n","import React from \"react\";\n\nconst SNWContent = () => {\n  return (\n    <div>\n      <h2>Mik√§ on SNW?</h2>\n      <p>\n        Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium ut\n        tenetur, animi ratione voluptatem, illum saepe voluptatum beatae eius\n        earum, excepturi commodi veniam fugiat molestiae. Repudiandae adipisci\n        similique doloremque odio.\n      </p>\n      <p>\n        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur,\n        officiis dignissimos. Minima consequuntur perferendis rem deleniti\n        voluptatem deserunt, cum quae et exercitationem vel libero qui, officia\n        quaerat inventore? Laudantium, corrupti?\n      </p>\n    </div>\n  );\n};\n\nexport default SNWContent;\n","import React from \"react\";\nimport PageContainer from \"../PageContainer\";\nimport SNWContent from \"./SNWContent\";\n\nconst SNWContainer = () => {\n  return (\n    <PageContainer title=\"Sunday Night Wreckfest\">\n      <SNWContent />\n    </PageContainer>\n  );\n};\n\nexport default SNWContainer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Navigation from \"./components/Navigation\";\nimport CalendarContainer from \"./components/calendar/CalendarContainer\";\nimport StandingsContainer from \"./components/standings/StandingsContainer\";\nimport SNWContainer from \"./components/snw/SNWContainer\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\">\n            <CalendarContainer />\n          </Route>\n          <Route path=\"/standings\">\n            <StandingsContainer />\n          </Route>\n          <Route path=\"/snw\">\n            <SNWContainer />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}